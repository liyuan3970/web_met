tinymce.PluginManager.add('newfile', function (editor, url) {
  var openDialog = function () {
    return editor.windowManager.open({
      title: '新建文件',
      body: {
        type: 'panel',
        items: [
          {
            type: 'selectbox', // component type
            name: 'doc', // identifier
            label:'材料类型',
            disabled: true, // disabled state
            size: 1, // number of visible values (optional)
            items: datalist
          },
          {
            type: 'grid', // component type
            columns: 2, // number of columns
            items: [
              {
                type: 'selectbox', // component type
                name: 'writer', // identifier
                label:'撰稿人',
                disabled: true, // disabled state
                size: 1, // number of visible values (optional)
                items: datalist
              },
              {
                type: 'selectbox', // component type
                name: 'publisher', // identifier
                label:'签发人',
                disabled: true, // disabled state
                size: 1, // number of visible values (optional)
                items: datalist
              }
            ] // array of panel components
          },
          {
            type: 'selectbox', // component type
            name: 'unity', // identifier
            label:'发布单位',
            disabled: true, // disabled state
            size: 1, // number of visible values (optional)
            items: datalist
          },
          {
            type: 'input', // component type
            name: 'inputA', // identifier
            inputMode: 'text',
            label: '日期', // text for the label
            placeholder: '请输入日期', // placeholder text for the input
          },
          {
            type: 'htmlpanel', // component type
            html: '<div>Html goes here</div>'
          },
          
         
        ]
      },
      buttons: [
        {
          type: 'cancel',
          text: '关闭'
        },
        {
          type: 'submit',
          text: '插入',
          primary: true
        }
      ],
      onSubmit: function (api) {
        var data = api.getData();
        // console.log(data)
        // 将输入框内容插入到内容区光标位置

        // $('#test_plot').html("666")
        // editor.insertContent("666");
        // api.close();


      }
    });
  };

  // 注册一个工具栏按钮名称
  editor.ui.registry.addButton('newfile', {
    text: '新建',
    onAction: function () {
        png_add_list = []
        $('#png_add_list').html("")
        var csrf = $('input[name="csrfmiddlewaretoken"]').val();
        $.ajax({
            url: "create_new_doc",  // 请求的地址
            type: "post",  // 请求方式
            timeout: 250, //设置延迟上限
            data: {
                'csrfmiddlewaretoken': csrf
            },
            dataType: "json",
            success: function (data) {
                // 'data_publisher': data_publisher,
                // 'data_writers': data_writers,
                // 'data_unity': data_unity,
                // 'data_documenttype': data_documenttype
                $('#new_document_publisher').html("")
                $('#new_document_writer').html("")
                $('#new_document_unity').html("")
                $('#new_document_type').html("")
                for (i = 0; i < data.data_publisher.length; i++) {
                    var option_publisher = document.createElement('option');
                    option_publisher.value = data.data_publisher[i]
                    option_publisher.innerText = data.data_publisher[i]
                    $('#new_document_publisher').append(option_publisher)
                }
                for (j = 0; j < data.data_writers.length; j++) {
                    var option_writers = document.createElement('option');
                    option_writers.value = data.data_writers[j]
                    option_writers.innerText = data.data_writers[j]
                    $('#new_document_writer').append(option_writers)
                }
                for (k = 0; k < data.data_unity.length; k++) {
                    var option_unity = document.createElement('option');
                    option_unity.value = data.data_unity[k]
                    option_unity.innerText = data.data_unity[k]
                    option_unity.style.textAlign = 'center'
                    $('#new_document_unity').append(option_unity)
                }
                for (m = 0; m < data.data_documenttype.length; m++) {
                    var option_documenttype = document.createElement('option');
                    option_documenttype.value = data.data_documenttype[m]
                    option_documenttype.innerText = data.data_documenttype[m]
                    option_documenttype.style.textAlign = 'center'
                    $('#new_document_type').append(option_documenttype)
                }



            }

        })
        $('#modal-000001').click()

      

    }
  });



});




